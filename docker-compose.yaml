version: '3'

services:
### PHP-FPM ### 
  php:
    build:
      context: ./php
      args: 
      - TIMEZONE=${TIMEZONE}
      - CHANGE_SOURCE=${CHANGE_SOURCE}
      - PHP_VERSION=${PHP_VERSION}
      - SWOOLE_VERSION=${SWOOLE_VERSION}
      - INSTALL_XDEBUG=${INSTALL_XDEBUG}
      - HIREDIS_VERSION=${HIREDIS_VERSION}
    image: lnmp-php
    container_name: compose-php
    restart: always
    volumes:
      - ${WORK_DIR}:/data
    working_dir: /data
    networks:
      - lnmp-tier
### NGINX ###
  nginx:
    build:
      context: ./nginx
      args: 
      - TIMEZONE=${TIMEZONE}
      - CHANGE_SOURCE=${CHANGE_SOURCE}
      - NGINX_VERSION=${NGINX_VERSION}
    image: lnmp-nginx
    container_name: compose-nginx
    restart: always
    depends_on:
      - php
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ${WORK_DIR}:/data
    working_dir: /data
    ports:
      - 80:80
      - 443:443
    networks:
      - lnmp-tier
  Redis:
      image: redis:${REDIS_VERSION}
      volumes:
          # redis 配置文件
          - ${WORK_DIR}/redis/conf.d/redis.conf:/etc/redis/redis.conf:ro
          # redis 持久化数据存储
          - ${WORK_DIR}/redis/db:/data/redis
          # 以配置文件启动 redis
      ports:
          - 6379:6379
      container_name: Redis
      restart: always
      networks:
       - lnmp-tier
# ### MYSQL ###
#   mysql:
#     build:
#       context: ./mysql
#       args: 
#         - MYSQL_VERSION=${MYSQL_VERSION}
#     image: lnmp-mysql
#     container_name: compose-mysql
#     environment: 
#       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#       MYSQL_USER: ${MYSQL_USER}
#       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#       MYSQL_DATABASE: ${MYSQL_DATABASE}
#     volumes: 
#       - ${DB_MYSQL_PATH}:/var/lib/mysql
#       - ./mysql/initdb.d:/docker-entrypoint-initdb.d
#     ports: 
#       - ${MYSQL_PORT}:3306
#     networks:
#       - lnmp-tier
# ### MONGODB ###
#   mongo:
#     build:
#       context: ./mongo
#       args: 
#         - MONGO_VERSION=${MONGO_VERSION}
#     image: lnmp-mongo
#     container_name: compose-mongo
#     environment:
#         - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
#         - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASS}
#         - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
#     volumes: 
#       - ${DB_MONGO_PATH}:/data/db
#       - ./mongo/initdb.d:/docker-entrypoint-initdb.d
#     ports: 
#       - ${MONGO_PORT}:27017
#     networks:
#       - lnmp-tier

networks:
  lnmp-tier:
    driver: bridge